/* tslint:disable */
/* eslint-disable */
/**
 * Byte.Core开发接口文档 Web端网站 - version 1.0
 *
 *
 *
 * OpenAPI version: 3.0.1
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
  ? Omit<
    AlovaMethodCreateConfig<
      AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
      any,
      Responded
    >,
    'params'
  >
  : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
  ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
  : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
  ? Method<
    AlovaGenerics<
      CurrentConfig extends undefined
      ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
      : CurrentConfig['transform'] extends (...args: any[]) => any
      ? Awaited<ReturnType<CurrentConfig['transform']>>
      : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
      any,
      RequestConfig,
      Response,
      ResponseHeader,
      L1Cache,
      L2Cache,
      SE
    >
  >
  : never;

export type PagerInfo = {
  totalRowCount?: number;
  pageSize?: number;
  startIndex?: number;
  pageIndex?: number;
  hasPrev?: boolean;
  hasNext?: boolean;
  isFirst?: boolean;
  isLast?: boolean;
  totalPageCount?: number;
};
export type RedisDemoDTO = {
  id?: string;
  code?: string;
  srot?: string;
};
export type RedisDemoDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: RedisDemoDTO[];
};
export type RedisDemoDTOPagedResultsExcutedResult = {
  success?: boolean;
  msg?: string;
  code?: number;
  data?: RedisDemoDTOPagedResults;
};
export type Int32ExcutedResult = {
  success?: boolean;
  msg?: string;
  code?: number;
  data?: number;
};
export type DeptTypeEnum = 10 | 20 | 30;
export type RoleTypeEnum = 10 | 20 | 30 | 40;
export type MenuTypeEnum = 1 | 2 | 3 | 4;
export type Menu = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  title?: string;
  path?: string;
  component?: string;
  componentName?: string;
  parentId?: string;
  sort?: number;
  icon?: string;
  type?: MenuTypeEnum;
  keepAlive?: boolean;
  hidden?: boolean;
  redirect?: string;
  alwaysShow?: boolean;
  state?: boolean;
  isDeleted?: boolean;
  roles?: Role[];
  children?: Menu[];
};
export type Role = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  state?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: string;
  dept?: Dept;
  users?: User[];
  menus?: Menu[];
};
export type Dept = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  image?: string;
  name?: string;
  easyName?: string;
  parentId?: string;
  address?: string;
  isDeleted?: boolean;
  phone?: string;
  man?: string;
  remark?: string;
  state?: boolean;
  sort?: number;
  type?: DeptTypeEnum;
  users?: User[];
  roles?: Role[];
  children?: Dept[];
};
export type User = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  avatar?: string;
  password?: string;
  state?: boolean;
  account?: string;
  depts?: Dept[];
  roles?: Role[];
};
export type DeptInfo = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  image?: string;
  name?: string;
  easyName?: string;
  parentId?: string;
  address?: string;
  isDeleted?: boolean;
  phone?: string;
  man?: string;
  remark?: string;
  state?: boolean;
  sort?: number;
  type?: DeptTypeEnum;
  users?: User[];
  roles?: Role[];
  children?: Dept[];
};
export type DeptTreeDTO = {
  id?: string;
  /**
   * 图标
   */
  image?: string;
  /**
   * 单位名称
   */
  name?: string;
  /**
   * 简写名称
   */
  easyName?: string;
  /**
   * 父级部门ID
   */
  parentId?: string;
  /**
   * 地址
   */
  address?: string;
  /**
   * 是否删除
   */
  isDeleted?: boolean;
  /**
   * 默认联系电话
   */
  phone?: string;
  /**
   * 默认联系人
   */
  man?: string;
  /**
   * 备注
   */
  remark?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 排序
   */
  sort?: number;
  type?: DeptTypeEnum;
  children?: DeptTreeDTO[];
};
export type DeptSelectDTO = {
  /**
   * 主键Id!
   */
  id?: string;
  /**
   * 父级
   */
  parentId?: string;
  /**
   * 菜单
   */
  name?: string;
  /**
   * 图标
   */
  icon?: string;
  children?: DeptSelectDTO[];
};
export type UpdateDeptParam = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  image?: string;
  name?: string;
  easyName?: string;
  parentId?: string;
  address?: string;
  isDeleted?: boolean;
  phone?: string;
  man?: string;
  remark?: string;
  state?: boolean;
  sort?: number;
  type?: DeptTypeEnum;
  users?: User[];
  roles?: Role[];
  children?: Dept[];
  /**
   * 验证码
   */
  msgCode?: number;
};
export type LoginInfoDTO = {
  /**
   * 主键Id!
   */
  id?: string;
  /**
   * 名称
   */
  name?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 账号
   */
  account?: string;
  roles?: string[];
  perms?: string[];
};
export type LoginToken = {
  /**
   * 授权token
   */
  accessToken?: string;
  /**
   * 过期时间
   */
  expires?: number;
  /**
   * 类型
   */
  tokenType?: string;
  /**
   * 刷新token
   */
  refreshToken?: string;
  /**
   * 允许token时间内
   */
  refreshTokenExpires?: number;
};
export type LoginParam = {
  /**
   * 账号
   */
  account?: string;
  /**
   * 密码
   */
  password?: string;
  captchaId?: string;
  captchaCode?: string;
};
export type MenuInfo = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  title?: string;
  path?: string;
  component?: string;
  componentName?: string;
  parentId?: string;
  sort?: number;
  icon?: string;
  type?: MenuTypeEnum;
  keepAlive?: boolean;
  hidden?: boolean;
  redirect?: string;
  alwaysShow?: boolean;
  state?: boolean;
  isDeleted?: boolean;
  roles?: Role[];
  children?: Menu[];
};
export type RouteMeta = {
  /**
   * 标题
   */
  title?: string;
  /**
   * 隐藏
   */
  hidden?: boolean;
  /**
   * Icon
   */
  icon?: string;
  /**
   * 是否缓存
   */
  keepAlive?: boolean;
  /**
   * 根目录始终显示
   */
  alwaysShow?: boolean;
  /**
   * 权限标识
   */
  roles?: string[];
};
export type RouteDTO = {
  id?: string;
  /**
   * 路径
   */
  path?: string;
  /**
   * 组件
   */
  component?: string;
  /**
   * 组件名称
   */
  name?: string;
  /**
   * 父级ID
   */
  parentId?: string;
  /**
   * 排序
   */
  sort?: number;
  type?: MenuTypeEnum;
  /**
   * 跳转路由
   */
  redirect?: string;
  meta?: RouteMeta;
  /**
   * 子节点
   */
  children?: RouteDTO[];
};
export type MenuTreeDTO = {
  id?: string;
  /**
   * 菜单标题
   */
  title?: string;
  /**
   * 组件
   */
  component?: string;
  /**
   * 组件名称
   */
  componentName?: string;
  /**
   * 父级菜单ID
   */
  parentId?: string;
  /**
   * 排序
   */
  sort?: number;
  /**
   * icon图标
   */
  icon?: string;
  type?: MenuTypeEnum;
  /**
   * 是否缓存
   */
  keepAlive?: boolean;
  /**
   * 是否隐藏
   */
  hidden?: boolean;
  /**
   * 跳转路由
   */
  redirect?: string;
  /**
   * 根目录始终显示
   */
  alwaysShow?: boolean;
  /**
   * 状态
   */
  state?: boolean;
  children?: MenuTreeDTO[];
};
export type MenuSelectDTO = {
  /**
   * 主键Id!
   */
  id?: string;
  /**
   * 父级
   */
  parentId?: string;
  /**
   * 菜单
   */
  title?: string;
  /**
   * 图标
   */
  icon?: string;
  children?: MenuSelectDTO[];
};
export type UpdateMenuParam = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  title?: string;
  path?: string;
  component?: string;
  componentName?: string;
  parentId?: string;
  sort?: number;
  icon?: string;
  type?: MenuTypeEnum;
  keepAlive?: boolean;
  hidden?: boolean;
  redirect?: string;
  alwaysShow?: boolean;
  state?: boolean;
  isDeleted?: boolean;
  roles?: Role[];
  children?: Menu[];
};
export type RoleInfo = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  state?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: string;
  dept?: Dept;
  users?: User[];
  menus?: Menu[];
  menuIds?: string[];
};
export type RoleDTO = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  state?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: string;
  dept?: Dept;
  users?: User[];
  menus?: Menu[];
  deptName?: string;
};
export type RoleDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: RoleDTO[];
};
export type RoleSelectDTO = {
  /**
   * 主键Id!
   */
  id?: string;
  /**
   * 账号
   */
  name?: string;
};
export type UpdateRoleParam = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  state?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: string;
  dept?: Dept;
  users?: User[];
  menus?: Menu[];
  /**
   * 菜单
   */
  menuIds?: string[];
};
export type TableAlignEnum = 1 | 2 | 3;
export type TableFixedEnum = 1 | 3;
export type TableColumnInfo = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  tableModelId?: string;
  type?: string;
  label?: string;
  prop?: string;
  sort?: number;
  /**
   * 对齐方式
   */
  align?: TableAlignEnum;
  /**
   * 固定方式
   */
  fixed?: TableFixedEnum;
  width?: number;
  sortable?: boolean;
  headTemplate?: string;
  template?: string;
  isShow?: boolean;
  condition?: number;
};
export type TableColumnDTO = {
  id?: string;
  /**
   * 名称
   */
  name?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 密码
   */
  password?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 账号
   */
  account?: string;
};
export type TableColumnDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: TableColumnDTO[];
};
export type UpdateTableColumnParam = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  tableModelId?: string;
  type?: string;
  label?: string;
  prop?: string;
  sort?: number;
  /**
   * 对齐方式
   */
  align?: TableAlignEnum;
  /**
   * 固定方式
   */
  fixed?: TableFixedEnum;
  width?: number;
  sortable?: boolean;
  headTemplate?: string;
  template?: string;
  isShow?: boolean;
  condition?: number;
  roleIds?: string[];
};
export type TableColumn = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  tableModelId?: string;
  type?: string;
  label?: string;
  prop?: string;
  sort?: number;
  /**
   * 对齐方式
   */
  align?: TableAlignEnum;
  /**
   * 固定方式
   */
  fixed?: TableFixedEnum;
  width?: number;
  sortable?: boolean;
  headTemplate?: string;
  template?: string;
  isShow?: boolean;
  condition?: number;
};
export type TableModelInfo = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  title?: string;
  router?: string;
  table?: string;
  comment?: string;
  tableColumns?: TableColumn[];
};
export type TableModelDTO = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  title?: string;
  router?: string;
  table?: string;
  comment?: string;
  tableColumns?: TableColumn[];
};
export type TableModelDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: TableModelDTO[];
};
export type UpdateTableModelParam = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  title?: string;
  router?: string;
  table?: string;
  comment?: string;
  tableColumns?: TableColumn[];
};
export type UserInfo = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  avatar?: string;
  password?: string;
  state?: boolean;
  account?: string;
  depts?: Dept[];
  roles?: Role[];
};
export type UserDTO = {
  id?: string;
  /**
   * 名称
   */
  name?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 密码
   */
  password?: string;
  /**
   * 状态
   */
  state?: boolean;
  /**
   * 账号
   */
  account?: string;
};
export type UserDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: UserDTO[];
};
export type UpdateUserParam = {
  /**
   * 主键
   */
  id?: string;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  avatar?: string;
  password?: string;
  state?: boolean;
  account?: string;
  depts?: Dept[];
  roles?: Role[];
  roleIds?: string[];
};
declare global {
  interface Apis {
    Demo: {
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Demo/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex?: number
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   success?: boolean
       *   msg?: string
       *   code?: number
       *   data?: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       id?: string
       *       code?: string
       *       srot?: string
       *     }>
       *   }
       * }
       * ```
       */
      get_api_demo_getpage<
        Config extends Alova2MethodConfig<RedisDemoDTOPagedResultsExcutedResult> & {
          params: {
            StartIndex?: number;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<RedisDemoDTOPagedResultsExcutedResult, 'Demo.get_api_demo_getpage', Config>;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/Demo/SetRoleData
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   num?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   success?: boolean
       *   msg?: string
       *   code?: number
       *   data?: number
       * }
       * ```
       */
      post_api_demo_setroledata<
        Config extends Alova2MethodConfig<Int32ExcutedResult> & {
          params: {
            num?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<Int32ExcutedResult, 'Demo.post_api_demo_setroledata', Config>;
    };
    Dept: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Dept/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_dept_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.delete_api_dept_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Dept/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 部门 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: string
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     state?: boolean
       *     sort?: number
       *     type?: 10 | 20 | 30
       *     users?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       avatar?: string
       *       password?: string
       *       state?: boolean
       *       account?: string
       *       depts?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: string
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         state?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         users?: Array<User>
       *         roles?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           state?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: string
       *           dept?: Dept
       *           users?: Array<User>
       *           menus?: Array<{
       *             // 主键
       *             id?: string
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             title?: string
       *             path?: string
       *             component?: string
       *             componentName?: string
       *             parentId?: string
       *             sort?: number
       *             icon?: string
       *             type?: 1 | 2 | 3 | 4
       *             keepAlive?: boolean
       *             hidden?: boolean
       *             redirect?: string
       *             alwaysShow?: boolean
       *             state?: boolean
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }>
       *       roles?: Array<Role>
       *     }>
       *     roles?: Array<Role>
       *     children?: Array<Dept>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dept_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 部门 详情
           * [required]
           */
          data: DeptInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 部门 详情
           * [required]
           */
          data: DeptInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_api_dept_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 树图
       *
       * **path:** /api/Dept/GetTree
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: string
       *     // 图标
       *     image?: string
       *     // 单位名称
       *     name?: string
       *     // 简写名称
       *     easyName?: string
       *     // 父级部门ID
       *     parentId?: string
       *     // 地址
       *     address?: string
       *     // 是否删除
       *     isDeleted?: boolean
       *     // 默认联系电话
       *     phone?: string
       *     // 默认联系人
       *     man?: string
       *     // 备注
       *     remark?: string
       *     // 状态
       *     state?: boolean
       *     // 排序
       *     sort?: number
       *     type?: 10 | 20 | 30
       *     children?: Array<DeptTreeDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dept_gettree<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_api_dept_gettree',
        Config
      >;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Dept/GetTreeSelect
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   types?: (10 | 20 | 30)[]
       *   parentId?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     // 主键Id!
       *     id?: string
       *     // 父级
       *     parentId?: string
       *     // 菜单
       *     name?: string
       *     // 图标
       *     icon?: string
       *     children?: Array<DeptSelectDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dept_gettreeselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            types?: DeptTypeEnum[];
            parentId?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_api_dept_gettreeselect',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/Dept/SetState
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       *   state?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_dept_setstate<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
            state?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.put_api_dept_setstate',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/Dept/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: string
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   image?: string
       *   name?: string
       *   easyName?: string
       *   parentId?: string
       *   address?: string
       *   isDeleted?: boolean
       *   phone?: string
       *   man?: string
       *   remark?: string
       *   state?: boolean
       *   sort?: number
       *   type?: 10 | 20 | 30
       *   users?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     avatar?: string
       *     password?: string
       *     state?: boolean
       *     account?: string
       *     depts?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: string
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       state?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       users?: Array<User>
       *       roles?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         state?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: string
       *         dept?: Dept
       *         users?: Array<User>
       *         menus?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           title?: string
       *           path?: string
       *           component?: string
       *           componentName?: string
       *           parentId?: string
       *           sort?: number
       *           icon?: string
       *           type?: 1 | 2 | 3 | 4
       *           keepAlive?: boolean
       *           hidden?: boolean
       *           redirect?: string
       *           alwaysShow?: boolean
       *           state?: boolean
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }>
       *     roles?: Array<Role>
       *   }>
       *   roles?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     state?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: string
       *     dept?: Dept
       *     users?: Array<User>
       *     menus?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       title?: string
       *       path?: string
       *       component?: string
       *       componentName?: string
       *       parentId?: string
       *       sort?: number
       *       icon?: string
       *       type?: 1 | 2 | 3 | 4
       *       keepAlive?: boolean
       *       hidden?: boolean
       *       redirect?: string
       *       alwaysShow?: boolean
       *       state?: boolean
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *   }>
       *   children?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: string
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     state?: boolean
       *     sort?: number
       *     type?: DeptTypeEnum
       *     users?: Array<User>
       *     roles?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       state?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: string
       *       dept?: Dept
       *       users?: Array<User>
       *       menus?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         title?: string
       *         path?: string
       *         component?: string
       *         componentName?: string
       *         parentId?: string
       *         sort?: number
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         keepAlive?: boolean
       *         hidden?: boolean
       *         redirect?: string
       *         alwaysShow?: boolean
       *         state?: boolean
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<Dept>
       *   }>
       *   // 验证码
       *   msgCode?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_dept_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateDeptParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.post_api_dept_submit',
        Config
      >;
    };
    Login: {
      /**
       * ---
       *
       * [GET] 获取登录信息
       *
       * **path:** /api/Login/Info
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键Id!
       *     id?: string
       *     // 名称
       *     name?: string
       *     // 头像
       *     avatar?: string
       *     // 账号
       *     account?: string
       *     roles?: string[]
       *     perms?: string[]
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_login_info<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginInfoDTO;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginInfoDTO;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.get_api_login_info',
        Config
      >;
      /**
       * ---
       *
       * [POST]
       *
       * **path:** /api/Login/Login
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 账号
       *   account?: string
       *   // 密码
       *   password?: string
       *   captchaId?: string
       *   captchaCode?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 授权token
       *     accessToken?: string
       *     // 过期时间
       *     expires?: number
       *     // 类型
       *     tokenType?: string
       *     // 刷新token
       *     refreshToken?: string
       *     // 允许token时间内
       *     refreshTokenExpires?: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_login_login<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: LoginParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_api_login_login',
        Config
      >;
      /**
       * ---
       *
       * [POST] 退出登录
       *
       * **path:** /api/Login/LoginOut
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_login_loginout<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_api_login_loginout',
        Config
      >;
    };
    Menu: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Menu/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_menu_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.delete_api_menu_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Menu/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 菜单 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     title?: string
       *     path?: string
       *     component?: string
       *     componentName?: string
       *     parentId?: string
       *     sort?: number
       *     icon?: string
       *     type?: 1 | 2 | 3 | 4
       *     keepAlive?: boolean
       *     hidden?: boolean
       *     redirect?: string
       *     alwaysShow?: boolean
       *     state?: boolean
       *     isDeleted?: boolean
       *     roles?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       state?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: string
       *       dept?: Dept
       *       users?: Array<User>
       *       menus?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         title?: string
       *         path?: string
       *         component?: string
       *         componentName?: string
       *         parentId?: string
       *         sort?: number
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         keepAlive?: boolean
       *         hidden?: boolean
       *         redirect?: string
       *         alwaysShow?: boolean
       *         state?: boolean
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       title?: string
       *       path?: string
       *       component?: string
       *       componentName?: string
       *       parentId?: string
       *       sort?: number
       *       icon?: string
       *       type?: 1 | 2 | 3 | 4
       *       keepAlive?: boolean
       *       hidden?: boolean
       *       redirect?: string
       *       alwaysShow?: boolean
       *       state?: boolean
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 菜单 详情
           * [required]
           */
          data: MenuInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 菜单 详情
           * [required]
           */
          data: MenuInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取我的路由
       *
       * **path:** /api/Menu/GetRoutes
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: string
       *     // 路径
       *     path?: string
       *     // 组件
       *     component?: string
       *     // 组件名称
       *     name?: string
       *     // 父级ID
       *     parentId?: string
       *     // 排序
       *     sort?: number
       *     type?: 1 | 2 | 3 | 4
       *     // 跳转路由
       *     redirect?: string
       *     meta?: {
       *       // 标题
       *       title?: string
       *       // 隐藏
       *       hidden?: boolean
       *       // Icon
       *       icon?: string
       *       // 是否缓存
       *       keepAlive?: boolean
       *       // 根目录始终显示
       *       alwaysShow?: boolean
       *       // 权限标识
       *       roles?: string[]
       *     }
       *     // 子节点
       *     children?: Array<RouteDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_getroutes<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_getroutes',
        Config
      >;
      /**
       * ---
       *
       * [GET] 列表
       *
       * **path:** /api/Menu/GetTree
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: string
       *     // 菜单标题
       *     title?: string
       *     // 组件
       *     component?: string
       *     // 组件名称
       *     componentName?: string
       *     // 父级菜单ID
       *     parentId?: string
       *     // 排序
       *     sort?: number
       *     // icon图标
       *     icon?: string
       *     type?: 1 | 2 | 3 | 4
       *     // 是否缓存
       *     keepAlive?: boolean
       *     // 是否隐藏
       *     hidden?: boolean
       *     // 跳转路由
       *     redirect?: string
       *     // 根目录始终显示
       *     alwaysShow?: boolean
       *     // 状态
       *     state?: boolean
       *     children?: Array<MenuTreeDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_gettree<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_gettree',
        Config
      >;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Menu/GetTreeSelect
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   parentId?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     // 主键Id!
       *     id?: string
       *     // 父级
       *     parentId?: string
       *     // 菜单
       *     title?: string
       *     // 图标
       *     icon?: string
       *     children?: Array<MenuSelectDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_gettreeselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            parentId?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_gettreeselect',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/Menu/SetState
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       *   state?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_menu_setstate<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
            state?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.put_api_menu_setstate',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/Menu/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: string
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   title?: string
       *   path?: string
       *   component?: string
       *   componentName?: string
       *   parentId?: string
       *   sort?: number
       *   icon?: string
       *   type?: 1 | 2 | 3 | 4
       *   keepAlive?: boolean
       *   hidden?: boolean
       *   redirect?: string
       *   alwaysShow?: boolean
       *   state?: boolean
       *   isDeleted?: boolean
       *   roles?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     state?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: string
       *     dept?: Dept
       *     users?: Array<User>
       *     menus?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       title?: string
       *       path?: string
       *       component?: string
       *       componentName?: string
       *       parentId?: string
       *       sort?: number
       *       icon?: string
       *       type?: 1 | 2 | 3 | 4
       *       keepAlive?: boolean
       *       hidden?: boolean
       *       redirect?: string
       *       alwaysShow?: boolean
       *       state?: boolean
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *   }>
       *   children?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     title?: string
       *     path?: string
       *     component?: string
       *     componentName?: string
       *     parentId?: string
       *     sort?: number
       *     icon?: string
       *     type?: 1 | 2 | 3 | 4
       *     keepAlive?: boolean
       *     hidden?: boolean
       *     redirect?: string
       *     alwaysShow?: boolean
       *     state?: boolean
       *     isDeleted?: boolean
       *     roles?: Array<Role>
       *     children?: Array<Menu>
       *   }>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_menu_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateMenuParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.post_api_menu_submit',
        Config
      >;
    };
    Role: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Role/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_role_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.delete_api_role_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Role/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 角色 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     state?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: string
       *     dept?: {
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: string
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       state?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       users?: Array<User>
       *       roles?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         state?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: string
       *         dept?: Dept
       *         users?: Array<User>
       *         menus?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           title?: string
       *           path?: string
       *           component?: string
       *           componentName?: string
       *           parentId?: string
       *           sort?: number
       *           icon?: string
       *           type?: 1 | 2 | 3 | 4
       *           keepAlive?: boolean
       *           hidden?: boolean
       *           redirect?: string
       *           alwaysShow?: boolean
       *           state?: boolean
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }
       *     users?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       avatar?: string
       *       password?: string
       *       state?: boolean
       *       account?: string
       *       depts?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: string
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         state?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         users?: Array<User>
       *         roles?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           state?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: string
       *           dept?: Dept
       *           users?: Array<User>
       *           menus?: Array<{
       *             // 主键
       *             id?: string
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             title?: string
       *             path?: string
       *             component?: string
       *             componentName?: string
       *             parentId?: string
       *             sort?: number
       *             icon?: string
       *             type?: 1 | 2 | 3 | 4
       *             keepAlive?: boolean
       *             hidden?: boolean
       *             redirect?: string
       *             alwaysShow?: boolean
       *             state?: boolean
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }>
       *       roles?: Array<Role>
       *     }>
       *     menus?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       title?: string
       *       path?: string
       *       component?: string
       *       componentName?: string
       *       parentId?: string
       *       sort?: number
       *       icon?: string
       *       type?: 1 | 2 | 3 | 4
       *       keepAlive?: boolean
       *       hidden?: boolean
       *       redirect?: string
       *       alwaysShow?: boolean
       *       state?: boolean
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *     menuIds?: string[]
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_role_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 角色 详情
           * [required]
           */
          data: RoleInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 角色 详情
           * [required]
           */
          data: RoleInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_api_role_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Role/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       *   StartIndex?: number
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       state?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: string
       *       dept?: {
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: string
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         state?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         users?: Array<User>
       *         roles?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           state?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: string
       *           dept?: Dept
       *           users?: Array<User>
       *           menus?: Array<{
       *             // 主键
       *             id?: string
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             title?: string
       *             path?: string
       *             component?: string
       *             componentName?: string
       *             parentId?: string
       *             sort?: number
       *             icon?: string
       *             type?: 1 | 2 | 3 | 4
       *             keepAlive?: boolean
       *             hidden?: boolean
       *             redirect?: string
       *             alwaysShow?: boolean
       *             state?: boolean
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }
       *       users?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         avatar?: string
       *         password?: string
       *         state?: boolean
       *         account?: string
       *         depts?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           image?: string
       *           name?: string
       *           easyName?: string
       *           parentId?: string
       *           address?: string
       *           isDeleted?: boolean
       *           phone?: string
       *           man?: string
       *           remark?: string
       *           state?: boolean
       *           sort?: number
       *           type?: DeptTypeEnum
       *           users?: Array<User>
       *           roles?: Array<{
       *             // 主键
       *             id?: string
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             name?: string
       *             type?: 10 | 20 | 30 | 40
       *             state?: boolean
       *             remark?: string
       *             code?: string
       *             sort?: number
       *             deptId?: string
       *             dept?: Dept
       *             users?: Array<User>
       *             menus?: Array<{
       *               // 主键
       *               id?: string
       *               // 创建者名称
       *               createBy?: string
       *               // 创建时间
       *               createTime?: string
       *               // 更新者名称
       *               updateBy?: string
       *               // 最后更新时间
       *               updateTime?: string
       *               title?: string
       *               path?: string
       *               component?: string
       *               componentName?: string
       *               parentId?: string
       *               sort?: number
       *               icon?: string
       *               type?: 1 | 2 | 3 | 4
       *               keepAlive?: boolean
       *               hidden?: boolean
       *               redirect?: string
       *               alwaysShow?: boolean
       *               state?: boolean
       *               isDeleted?: boolean
       *               roles?: Array<Role>
       *               children?: Array<Menu>
       *             }>
       *           }>
       *           children?: Array<Dept>
       *         }>
       *         roles?: Array<Role>
       *       }>
       *       menus?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         title?: string
       *         path?: string
       *         component?: string
       *         componentName?: string
       *         parentId?: string
       *         sort?: number
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         keepAlive?: boolean
       *         hidden?: boolean
       *         redirect?: string
       *         alwaysShow?: boolean
       *         state?: boolean
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *       deptName?: string
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_role_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            KeyWord?: string;
            StartIndex?: number;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_api_role_getpage',
        Config
      >;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Role/Select
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     // 主键Id!
       *     id?: string
       *     // 账号
       *     name?: string
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_role_select<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_api_role_select',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/Role/SetState
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       *   state?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_role_setstate<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
            state?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.put_api_role_setstate',
        Config
      >;
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Role/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: string
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   name?: string
       *   type?: 10 | 20 | 30 | 40
       *   state?: boolean
       *   remark?: string
       *   code?: string
       *   sort?: number
       *   deptId?: string
       *   dept?: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: string
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     state?: boolean
       *     sort?: number
       *     type?: DeptTypeEnum
       *     users?: Array<User>
       *     roles?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       state?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: string
       *       dept?: Dept
       *       users?: Array<User>
       *       menus?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         title?: string
       *         path?: string
       *         component?: string
       *         componentName?: string
       *         parentId?: string
       *         sort?: number
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         keepAlive?: boolean
       *         hidden?: boolean
       *         redirect?: string
       *         alwaysShow?: boolean
       *         state?: boolean
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<Dept>
       *   }
       *   users?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     avatar?: string
       *     password?: string
       *     state?: boolean
       *     account?: string
       *     depts?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: string
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       state?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       users?: Array<User>
       *       roles?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         state?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: string
       *         dept?: Dept
       *         users?: Array<User>
       *         menus?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           title?: string
       *           path?: string
       *           component?: string
       *           componentName?: string
       *           parentId?: string
       *           sort?: number
       *           icon?: string
       *           type?: 1 | 2 | 3 | 4
       *           keepAlive?: boolean
       *           hidden?: boolean
       *           redirect?: string
       *           alwaysShow?: boolean
       *           state?: boolean
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }>
       *     roles?: Array<Role>
       *   }>
       *   menus?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     title?: string
       *     path?: string
       *     component?: string
       *     componentName?: string
       *     parentId?: string
       *     sort?: number
       *     icon?: string
       *     type?: 1 | 2 | 3 | 4
       *     keepAlive?: boolean
       *     hidden?: boolean
       *     redirect?: string
       *     alwaysShow?: boolean
       *     state?: boolean
       *     isDeleted?: boolean
       *     roles?: Array<Role>
       *     children?: Array<Menu>
       *   }>
       *   // 菜单
       *   menuIds?: string[]
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_role_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateRoleParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.post_api_role_submit',
        Config
      >;
    };
    TableColumn: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/TableColumn/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_tablecolumn_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.delete_api_tablecolumn_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/TableColumn/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 用户 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     tableModelId?: string
       *     type?: string
       *     label?: string
       *     prop?: string
       *     sort?: number
       *     // 对齐方式
       *     align?: 1 | 2 | 3
       *     // 固定方式
       *     fixed?: 1 | 3
       *     width?: number
       *     sortable?: boolean
       *     headTemplate?: string
       *     template?: string
       *     isShow?: boolean
       *     condition?: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tablecolumn_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 用户 详情
           * [required]
           */
          data: TableColumnInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 用户 详情
           * [required]
           */
          data: TableColumnInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.get_api_tablecolumn_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/TableColumn/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       *   StartIndex?: number
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       id?: string
       *       // 名称
       *       name?: string
       *       // 头像
       *       avatar?: string
       *       // 密码
       *       password?: string
       *       // 状态
       *       state?: boolean
       *       // 账号
       *       account?: string
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tablecolumn_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableColumnDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            KeyWord?: string;
            StartIndex?: number;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableColumnDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.get_api_tablecolumn_getpage',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/TableColumn/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: string
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   tableModelId?: string
       *   type?: string
       *   label?: string
       *   prop?: string
       *   sort?: number
       *   // 对齐方式
       *   align?: 1 | 2 | 3
       *   // 固定方式
       *   fixed?: 1 | 3
       *   width?: number
       *   sortable?: boolean
       *   headTemplate?: string
       *   template?: string
       *   isShow?: boolean
       *   condition?: number
       *   roleIds?: string[]
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_tablecolumn_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTableColumnParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.post_api_tablecolumn_submit',
        Config
      >;
    };
    TableModel: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/TableModel/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_tablemodel_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableModel.delete_api_tablemodel_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/TableModel/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Id?: string
       *   // 路由
       *   Router?: string
       *   Table?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     title?: string
       *     router?: string
       *     table?: string
       *     comment?: string
       *     tableColumns?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       tableModelId?: string
       *       type?: string
       *       label?: string
       *       prop?: string
       *       sort?: number
       *       // 对齐方式
       *       align?: 1 | 2 | 3
       *       // 固定方式
       *       fixed?: 1 | 3
       *       width?: number
       *       sortable?: boolean
       *       headTemplate?: string
       *       template?: string
       *       isShow?: boolean
       *       condition?: number
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tablemodel_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableModelInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Id?: string;
            /**
             * 路由
             */
            Router?: string;
            Table?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableModelInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableModel.get_api_tablemodel_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/TableModel/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       *   StartIndex?: number
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       title?: string
       *       router?: string
       *       table?: string
       *       comment?: string
       *       tableColumns?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         tableModelId?: string
       *         type?: string
       *         label?: string
       *         prop?: string
       *         sort?: number
       *         // 对齐方式
       *         align?: 1 | 2 | 3
       *         // 固定方式
       *         fixed?: 1 | 3
       *         width?: number
       *         sortable?: boolean
       *         headTemplate?: string
       *         template?: string
       *         isShow?: boolean
       *         condition?: number
       *       }>
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tablemodel_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableModelDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            KeyWord?: string;
            StartIndex?: number;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableModelDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableModel.get_api_tablemodel_getpage',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/TableModel/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: string
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   title?: string
       *   router?: string
       *   table?: string
       *   comment?: string
       *   tableColumns?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     tableModelId?: string
       *     type?: string
       *     label?: string
       *     prop?: string
       *     sort?: number
       *     // 对齐方式
       *     align?: 1 | 2 | 3
       *     // 固定方式
       *     fixed?: 1 | 3
       *     width?: number
       *     sortable?: boolean
       *     headTemplate?: string
       *     template?: string
       *     isShow?: boolean
       *     condition?: number
       *   }>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_tablemodel_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTableModelParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableModel.post_api_tablemodel_submit',
        Config
      >;
    };
    Upload: {
      /**
       * ---
       *
       * [POST] 上传图片
       *
       * **path:** /api/Upload/Images
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string[]
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_upload_images<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Upload.post_api_upload_images',
        Config
      >;
    };
    User: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/User/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = string[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_user_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: string[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.delete_api_user_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/User/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 用户 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     avatar?: string
       *     password?: string
       *     state?: boolean
       *     account?: string
       *     depts?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: string
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       state?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       users?: Array<User>
       *       roles?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         state?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: string
       *         dept?: Dept
       *         users?: Array<User>
       *         menus?: Array<{
       *           // 主键
       *           id?: string
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           title?: string
       *           path?: string
       *           component?: string
       *           componentName?: string
       *           parentId?: string
       *           sort?: number
       *           icon?: string
       *           type?: 1 | 2 | 3 | 4
       *           keepAlive?: boolean
       *           hidden?: boolean
       *           redirect?: string
       *           alwaysShow?: boolean
       *           state?: boolean
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }>
       *     roles?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       state?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: string
       *       dept?: Dept
       *       users?: Array<User>
       *       menus?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         title?: string
       *         path?: string
       *         component?: string
       *         componentName?: string
       *         parentId?: string
       *         sort?: number
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         keepAlive?: boolean
       *         hidden?: boolean
       *         redirect?: string
       *         alwaysShow?: boolean
       *         state?: boolean
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_user_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 用户 详情
           * [required]
           */
          data: UserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 用户 详情
           * [required]
           */
          data: UserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.get_api_user_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/User/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       *   // 公司
       *   DeptId?: string
       *   StartIndex?: number
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       id?: string
       *       // 名称
       *       name?: string
       *       // 头像
       *       avatar?: string
       *       // 密码
       *       password?: string
       *       // 状态
       *       state?: boolean
       *       // 账号
       *       account?: string
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_user_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: UserDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            KeyWord?: string;
            /**
             * 公司
             */
            DeptId?: string;
            StartIndex?: number;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: UserDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.get_api_user_getpage',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/User/SetState
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: string
       *   state?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_user_setstate<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: string;
            state?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.put_api_user_setstate',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/User/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: string
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   name?: string
       *   avatar?: string
       *   password?: string
       *   state?: boolean
       *   account?: string
       *   depts?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: string
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     state?: boolean
       *     sort?: number
       *     type?: DeptTypeEnum
       *     users?: Array<User>
       *     roles?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       state?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: string
       *       dept?: Dept
       *       users?: Array<User>
       *       menus?: Array<{
       *         // 主键
       *         id?: string
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         title?: string
       *         path?: string
       *         component?: string
       *         componentName?: string
       *         parentId?: string
       *         sort?: number
       *         icon?: string
       *         type?: 1 | 2 | 3 | 4
       *         keepAlive?: boolean
       *         hidden?: boolean
       *         redirect?: string
       *         alwaysShow?: boolean
       *         state?: boolean
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<Dept>
       *   }>
       *   roles?: Array<{
       *     // 主键
       *     id?: string
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     state?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: string
       *     dept?: Dept
       *     users?: Array<User>
       *     menus?: Array<{
       *       // 主键
       *       id?: string
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       title?: string
       *       path?: string
       *       component?: string
       *       componentName?: string
       *       parentId?: string
       *       sort?: number
       *       icon?: string
       *       type?: 1 | 2 | 3 | 4
       *       keepAlive?: boolean
       *       hidden?: boolean
       *       redirect?: string
       *       alwaysShow?: boolean
       *       state?: boolean
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *   }>
       *   roleIds?: string[]
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_user_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateUserParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.post_api_user_submit',
        Config
      >;
    };
  }

  var Apis: Apis;
}
