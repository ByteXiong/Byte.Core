/* tslint:disable */
/* eslint-disable */
/**
 * Byte.Core开发接口文档 Web端网站 - version 1.0
 *
 *
 *
 * OpenAPI version: 3.0.1
 *
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
import type { Alova, AlovaMethodCreateConfig, AlovaGenerics, Method } from 'alova';
import type { $$userConfigMap, alovaInstance } from '.';
import type apiDefinitions from './apiDefinitions';

type CollapsedAlova = typeof alovaInstance;
type UserMethodConfigMap = typeof $$userConfigMap;

type Alova2MethodConfig<Responded> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Omit<
        AlovaMethodCreateConfig<
          AlovaGenerics<Responded, any, RequestConfig, Response, ResponseHeader, L1Cache, L2Cache, SE>,
          any,
          Responded
        >,
        'params'
      >
    : never;

// Extract the return type of transform function that define in $$userConfigMap, if it not exists, use the default type.
type ExtractUserDefinedTransformed<
  DefinitionKey extends keyof typeof apiDefinitions,
  Default
> = DefinitionKey extends keyof UserMethodConfigMap
  ? UserMethodConfigMap[DefinitionKey]['transform'] extends (...args: any[]) => any
    ? Awaited<ReturnType<UserMethodConfigMap[DefinitionKey]['transform']>>
    : Default
  : Default;
type Alova2Method<
  Responded,
  DefinitionKey extends keyof typeof apiDefinitions,
  CurrentConfig extends Alova2MethodConfig<any>
> =
  CollapsedAlova extends Alova<
    AlovaGenerics<
      any,
      any,
      infer RequestConfig,
      infer Response,
      infer ResponseHeader,
      infer L1Cache,
      infer L2Cache,
      infer SE
    >
  >
    ? Method<
        AlovaGenerics<
          CurrentConfig extends undefined
            ? ExtractUserDefinedTransformed<DefinitionKey, Responded>
            : CurrentConfig['transform'] extends (...args: any[]) => any
              ? Awaited<ReturnType<CurrentConfig['transform']>>
              : ExtractUserDefinedTransformed<DefinitionKey, Responded>,
          any,
          RequestConfig,
          Response,
          ResponseHeader,
          L1Cache,
          L2Cache,
          SE
        >
      >
    : never;

export type DeptTypeEnum = 10 | 20 | 30;
export type RoleTypeEnum = 10 | 20 | 30 | 40;
export type LayoutTypeEnum = 1 | 2;
export type MenuTypeEnum = 1 | 2 | 3 | 4;
export type IconTypeEnum = 1 | 2;
export type Menu = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  path?: string;
  pathParam?: string;
  layout?: LayoutTypeEnum;
  redirect?: string;
  component?: string;
  parentId?: number;
  menuType?: MenuTypeEnum;
  iconType?: IconTypeEnum;
  status?: boolean;
  title?: string;
  i18nKey?: string;
  keepAlive?: boolean;
  constant?: boolean;
  icon?: string;
  localIcon?: string;
  iconFontSize?: number;
  order?: number;
  href?: string;
  hideInMenu?: boolean;
  activeMenu?: string;
  multiTab?: boolean;
  fixedIndexInTab?: number;
  isDeleted?: boolean;
  roles?: Role[];
  children?: Menu[];
};
export type Role = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  status?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: number;
  dept?: Dept;
  user_Dept_Roles?: User_Dept_Role[];
  menus?: Menu[];
};
export type User = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  nickName?: string;
  avatar?: string;
  phone?: string;
  email?: string;
  password?: string;
  status?: boolean;
  userName?: string;
  user_Dept_Roles?: User_Dept_Role[];
};
export type Dept = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  image?: string;
  name?: string;
  easyName?: string;
  parentId?: number;
  address?: string;
  isDeleted?: boolean;
  phone?: string;
  man?: string;
  remark?: string;
  status?: boolean;
  sort?: number;
  type?: DeptTypeEnum;
  user_Dept_Roles?: User_Dept_Role[];
  roles?: Role[];
  children?: Dept[];
};
export type User_Dept_Role = {
  userId?: number;
  deptId?: number;
  roleId?: number;
  dept?: Dept;
  role?: Role;
  user?: User;
};
export type DeptInfo = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  image?: string;
  name?: string;
  easyName?: string;
  parentId?: number;
  address?: string;
  isDeleted?: boolean;
  phone?: string;
  man?: string;
  remark?: string;
  status?: boolean;
  sort?: number;
  type?: DeptTypeEnum;
  user_Dept_Roles?: User_Dept_Role[];
  roles?: Role[];
  children?: Dept[];
};
export type DeptTreeDTO = {
  id?: number;
  /**
   * 图标
   */
  image?: string;
  /**
   * 单位名称
   */
  name?: string;
  /**
   * 简写名称
   */
  easyName?: string;
  /**
   * 父级部门ID
   */
  parentId?: number;
  /**
   * 地址
   */
  address?: string;
  /**
   * 是否删除
   */
  isDeleted?: boolean;
  /**
   * 默认联系电话
   */
  phone?: string;
  /**
   * 默认联系人
   */
  man?: string;
  /**
   * 备注
   */
  remark?: string;
  /**
   * 状态
   */
  status?: boolean;
  /**
   * 排序
   */
  sort?: number;
  type?: DeptTypeEnum;
  children?: DeptTreeDTO[];
};
export type DeptSelectDTO = {
  /**
   * 主键Id!
   */
  id?: number;
  /**
   * 父级
   */
  parentId?: number;
  /**
   * 菜单
   */
  name?: string;
  /**
   * 图标
   */
  icon?: string;
  children?: DeptSelectDTO[];
};
export type UpdateDeptParam = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  image?: string;
  name?: string;
  easyName?: string;
  parentId?: number;
  address?: string;
  isDeleted?: boolean;
  phone?: string;
  man?: string;
  remark?: string;
  status?: boolean;
  sort?: number;
  type?: DeptTypeEnum;
  user_Dept_Roles?: User_Dept_Role[];
  roles?: Role[];
  children?: Dept[];
  /**
   * 验证码
   */
  msgCode?: number;
};
export type DicDataSelectDTO = {
  label?: string;
  value?: string;
};
export type LoginInfoDTO = {
  /**
   * 主键Id!
   */
  id?: number;
  /**
   * 名称
   */
  name?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 账号
   */
  userName?: string;
  roles?: string[];
  buttons?: string[];
};
export type LoginToken = {
  /**
   * 授权token
   */
  accessToken?: string;
  /**
   * 过期时间
   */
  expires?: number;
  /**
   * 类型
   */
  tokenType?: string;
  /**
   * 刷新token
   */
  refreshToken?: string;
  /**
   * 允许token时间内
   */
  refreshTokenExpires?: number;
};
export type LoginParam = {
  /**
   * 账号
   */
  userName?: string;
  /**
   * 密码
   */
  password?: string;
  captchaId?: string;
  captchaCode?: string;
};
export type MenuQuery = {
  id?: number;
  /**
   * 父级Id
   */
  parentId?: number;
  key?: string;
  value?: string;
  /**
   * 状态
   */
  status?: boolean;
};
export type RouteMeta = {
  /**
   * 路由标题(可用来作document.title或者菜单的名称)
   */
  title?: string;
  /**
   * 多语言
   */
  i18nKey?: string;
  /**
   * 权限标识
   */
  roles?: string[];
  /**
   * 缓存页面
   */
  keepAlive?: boolean;
  /**
   * 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
   */
  constant?: boolean;
  /**
   * 菜单和面包屑对应的图标
   */
  icon?: string;
  /**
   * 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
   */
  localIcon?: string;
  /**
   * 菜单和面包屑对应的图标的字体大小
   */
  iconFontSize?: number;
  /**
   * 路由顺序，可用于菜单的排序
   */
  order?: number;
  /**
   * 外链链接
   */
  href?: string;
  /**
   * 是否在菜单中隐藏路线
   */
  hideInMenu?: boolean;
  /**
   * 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
   */
  activeMenu?: string;
  /**
   * 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
   */
  multiTab?: boolean;
  /**
   * 如果设置，路线将固定在制表符中，值是固定制表符的顺序
   */
  fixedIndexInTab?: number;
  /**
   * 跳转参数
   */
  query?: MenuQuery[];
};
export type RouteDTO = {
  id?: number;
  /**
   * 菜单名
   */
  name?: string;
  /**
   * 路径
   */
  path?: string;
  pathParam?: string;
  /**
   * 重定向
   */
  redirect?: string;
  /**
   * 组件
   */
  component?: string;
  /**
   * 父级
   */
  parentId?: number;
  type?: MenuTypeEnum;
  /**
   * 状态
   */
  status?: boolean;
  meta?: RouteMeta;
  /**
   * 子节点
   */
  children?: RouteDTO[];
};
export type MenuButton = {
  id?: number;
  /**
   * 按钮编码
   */
  code?: string;
  /**
   * 描述
   */
  desc?: string;
  /**
   * 父级Id
   */
  parentId?: number;
  /**
   * 状态
   */
  status?: boolean;
};
export type MenuInfo = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  path?: string;
  pathParam?: string;
  layout?: LayoutTypeEnum;
  redirect?: string;
  component?: string;
  parentId?: number;
  menuType?: MenuTypeEnum;
  iconType?: IconTypeEnum;
  status?: boolean;
  title?: string;
  i18nKey?: string;
  keepAlive?: boolean;
  constant?: boolean;
  icon?: string;
  localIcon?: string;
  iconFontSize?: number;
  order?: number;
  href?: string;
  hideInMenu?: boolean;
  activeMenu?: string;
  multiTab?: boolean;
  fixedIndexInTab?: number;
  isDeleted?: boolean;
  roles?: Role[];
  children?: Menu[];
  buttons?: MenuButton[];
  querys?: MenuQuery[];
};
export type MenuTreeDTO = {
  id?: number;
  /**
   * 菜单标题
   */
  title?: string;
  /**
   * 路由名称
   */
  name?: string;
  /**
   * 组件
   */
  component?: string;
  /**
   * 父级菜单ID
   */
  parentId?: number;
  /**
   * 排序
   */
  order?: number;
  /**
   * icon图标
   */
  icon?: string;
  menuType?: MenuTypeEnum;
  /**
   * 是否缓存
   */
  keepAlive?: boolean;
  /**
   * 是否隐藏
   */
  hidden?: boolean;
  /**
   * 跳转路由
   */
  redirect?: string;
  /**
   * 根目录始终显示
   */
  alwaysShow?: boolean;
  /**
   * 状态
   */
  status?: boolean;
  children?: MenuTreeDTO[];
};
export type MenuSelectDTO = {
  /**
   * 主键Id!
   */
  id?: number;
  /**
   * 父级
   */
  parentId?: number;
  /**
   * 菜单
   */
  title?: string;
  /**
   * 图标
   */
  icon?: string;
  children?: MenuSelectDTO[];
};
export type RouteSelectDTO = {
  id?: number;
  /**
   * 父级ID
   */
  parentId?: number;
  /**
   * 标题
   */
  title?: string;
  menuType?: MenuTypeEnum;
  children?: RouteSelectDTO[];
};
export type SetByRoleIdDTO = {
  roleId?: number;
  menuIds?: number[];
};
export type UpdateMenuParam = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  path?: string;
  pathParam?: string;
  layout?: LayoutTypeEnum;
  redirect?: string;
  component?: string;
  parentId?: number;
  menuType?: MenuTypeEnum;
  iconType?: IconTypeEnum;
  status?: boolean;
  title?: string;
  i18nKey?: string;
  keepAlive?: boolean;
  constant?: boolean;
  icon?: string;
  localIcon?: string;
  iconFontSize?: number;
  order?: number;
  href?: string;
  hideInMenu?: boolean;
  activeMenu?: string;
  multiTab?: boolean;
  fixedIndexInTab?: number;
  isDeleted?: boolean;
  roles?: Role[];
  children?: Menu[];
  buttons?: MenuButton[];
  querys?: MenuQuery[];
};
export type RoleInfo = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  status?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: number;
  dept?: Dept;
  user_Dept_Roles?: User_Dept_Role[];
  menus?: Menu[];
  menuIds?: number[];
};
export type PagerInfo = {
  totalRowCount?: number;
  pageSize?: number;
  startIndex?: number;
  pageIndex?: number;
  hasPrev?: boolean;
  hasNext?: boolean;
  isFirst?: boolean;
  isLast?: boolean;
  totalPageCount?: number;
};
export type RoleDTO = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  status?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: number;
  dept?: Dept;
  user_Dept_Roles?: User_Dept_Role[];
  menus?: Menu[];
  deptName?: string;
};
export type RoleDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: RoleDTO[];
};
export type RoleSelectDTO = {
  /**
   * 主键Id!
   */
  id?: number;
  /**
   * 账号
   */
  name?: string;
};
export type UpdateRoleParam = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  name?: string;
  type?: RoleTypeEnum;
  status?: boolean;
  remark?: string;
  code?: string;
  sort?: number;
  deptId?: number;
  dept?: Dept;
  user_Dept_Roles?: User_Dept_Role[];
  menus?: Menu[];
  /**
   * 菜单
   */
  menuIds?: number[];
};
export type ObjectPagedResults = {
  pagerInfo?: PagerInfo;
  data?: unknown[];
};
export type ViewTypeEnum = 1 | 2 | 3;
export type OrderTypeEnum = 1 | 2;
export type ConditionalType = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16;
export type ColumnTypeEnum = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 99;
export type TableColumn = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  viewId?: number;
  title?: string;
  key?: string;
  searchType?: ConditionalType;
  columnType?: ColumnTypeEnum;
  columnTypeDetail?: string;
  columnTypeRules?: string;
  isCustom?: boolean;
  sort?: number;
  isShow?: boolean;
  props?: string;
  tableView?: TableView;
};
export type TableView = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  tableof?: string;
  router?: string;
  type?: ViewTypeEnum;
  sortKey?: string;
  sortOrder?: OrderTypeEnum;
  props?: string;
  tableColumns?: TableColumn[];
};
export type TableSortParam = {
  id?: number;
  sort?: number;
};
export type UpdateTableViewParam = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  tableof?: string;
  router?: string;
  type?: ViewTypeEnum;
  sortKey?: string;
  sortOrder?: OrderTypeEnum;
  props?: string;
  tableColumns?: TableColumn[];
};
export type UserInfo = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  nickName?: string;
  avatar?: string;
  phone?: string;
  email?: string;
  password?: string;
  status?: boolean;
  userName?: string;
  user_Dept_Roles?: User_Dept_Role[];
  roleIds?: number[];
};
export type UserDTO = {
  id?: number;
  /**
   * 昵称
   */
  nickName?: string;
  /**
   * 头像
   */
  avatar?: string;
  /**
   * 手机号
   */
  phone?: string;
  /**
   * 电子邮箱
   */
  email?: string;
  /**
   * 状态
   */
  status?: boolean;
  /**
   * 账号
   */
  userName?: string;
};
export type UserDTOPagedResults = {
  pagerInfo?: PagerInfo;
  data?: UserDTO[];
};
export type UpdateUserParam = {
  /**
   * 主键
   */
  id?: number;
  /**
   * 创建者名称
   */
  createBy?: string;
  /**
   * 创建时间
   */
  createTime?: string;
  /**
   * 更新者名称
   */
  updateBy?: string;
  /**
   * 最后更新时间
   */
  updateTime?: string;
  nickName?: string;
  avatar?: string;
  phone?: string;
  email?: string;
  password?: string;
  status?: boolean;
  userName?: string;
  user_Dept_Roles?: User_Dept_Role[];
  roleIds?: number[];
};
declare global {
  interface Apis {
    Dept: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Dept/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_dept_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.delete_api_dept_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Dept/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 部门 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: number
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     status?: boolean
       *     sort?: number
       *     type?: 10 | 20 | 30
       *     user_Dept_Roles?: Array<{
       *       userId?: number
       *       deptId?: number
       *       roleId?: number
       *       dept?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: number
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         status?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         roles?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           status?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: number
       *           dept?: Dept
       *           user_Dept_Roles?: Array<User_Dept_Role>
       *           menus?: Array<{
       *             // 主键
       *             id?: number
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             name?: string
       *             path?: string
       *             pathParam?: string
       *             layout?: 1 | 2
       *             redirect?: string
       *             component?: string
       *             parentId?: number
       *             menuType?: 1 | 2 | 3 | 4
       *             iconType?: 1 | 2
       *             status?: boolean
       *             title?: string
       *             i18nKey?: string
       *             keepAlive?: boolean
       *             constant?: boolean
       *             icon?: string
       *             localIcon?: string
       *             iconFontSize?: number
       *             order?: number
       *             href?: string
       *             hideInMenu?: boolean
       *             activeMenu?: string
       *             multiTab?: boolean
       *             fixedIndexInTab?: number
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }
       *       role?: Role
       *       user?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         nickName?: string
       *         avatar?: string
       *         phone?: string
       *         email?: string
       *         password?: string
       *         status?: boolean
       *         userName?: string
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *       }
       *     }>
       *     roles?: Array<Role>
       *     children?: Array<Dept>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dept_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 部门 详情
           * [required]
           */
          data: DeptInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 部门 详情
           * [required]
           */
          data: DeptInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_api_dept_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 树图
       *
       * **path:** /api/Dept/GetTree
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: number
       *     // 图标
       *     image?: string
       *     // 单位名称
       *     name?: string
       *     // 简写名称
       *     easyName?: string
       *     // 父级部门ID
       *     parentId?: number
       *     // 地址
       *     address?: string
       *     // 是否删除
       *     isDeleted?: boolean
       *     // 默认联系电话
       *     phone?: string
       *     // 默认联系人
       *     man?: string
       *     // 备注
       *     remark?: string
       *     // 状态
       *     status?: boolean
       *     // 排序
       *     sort?: number
       *     type?: 10 | 20 | 30
       *     children?: Array<DeptTreeDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dept_gettree<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_api_dept_gettree',
        Config
      >;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Dept/GetTreeSelect
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   types?: (10 | 20 | 30)[]
       *   parentId?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     // 主键Id!
       *     id?: number
       *     // 父级
       *     parentId?: number
       *     // 菜单
       *     name?: string
       *     // 图标
       *     icon?: string
       *     children?: Array<DeptSelectDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dept_gettreeselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            types?: DeptTypeEnum[];
            parentId?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DeptSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.get_api_dept_gettreeselect',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/Dept/SetStatus
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       *   status?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_dept_setstatus<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
            status?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.put_api_dept_setstatus',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/Dept/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   image?: string
       *   name?: string
       *   easyName?: string
       *   parentId?: number
       *   address?: string
       *   isDeleted?: boolean
       *   phone?: string
       *   man?: string
       *   remark?: string
       *   status?: boolean
       *   sort?: number
       *   type?: 10 | 20 | 30
       *   user_Dept_Roles?: Array<{
       *     userId?: number
       *     deptId?: number
       *     roleId?: number
       *     dept?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: number
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       status?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       roles?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         status?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: number
       *         dept?: Dept
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         menus?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           path?: string
       *           pathParam?: string
       *           layout?: 1 | 2
       *           redirect?: string
       *           component?: string
       *           parentId?: number
       *           menuType?: 1 | 2 | 3 | 4
       *           iconType?: 1 | 2
       *           status?: boolean
       *           title?: string
       *           i18nKey?: string
       *           keepAlive?: boolean
       *           constant?: boolean
       *           icon?: string
       *           localIcon?: string
       *           iconFontSize?: number
       *           order?: number
       *           href?: string
       *           hideInMenu?: boolean
       *           activeMenu?: string
       *           multiTab?: boolean
       *           fixedIndexInTab?: number
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }
       *     role?: Role
       *     user?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       nickName?: string
       *       avatar?: string
       *       phone?: string
       *       email?: string
       *       password?: string
       *       status?: boolean
       *       userName?: string
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *     }
       *   }>
       *   roles?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     status?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: number
       *     dept?: Dept
       *     user_Dept_Roles?: Array<User_Dept_Role>
       *     menus?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       path?: string
       *       pathParam?: string
       *       layout?: 1 | 2
       *       redirect?: string
       *       component?: string
       *       parentId?: number
       *       menuType?: 1 | 2 | 3 | 4
       *       iconType?: 1 | 2
       *       status?: boolean
       *       title?: string
       *       i18nKey?: string
       *       keepAlive?: boolean
       *       constant?: boolean
       *       icon?: string
       *       localIcon?: string
       *       iconFontSize?: number
       *       order?: number
       *       href?: string
       *       hideInMenu?: boolean
       *       activeMenu?: string
       *       multiTab?: boolean
       *       fixedIndexInTab?: number
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *   }>
       *   children?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: number
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     status?: boolean
       *     sort?: number
       *     type?: DeptTypeEnum
       *     user_Dept_Roles?: Array<User_Dept_Role>
       *     roles?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       status?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: number
       *       dept?: Dept
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         path?: string
       *         pathParam?: string
       *         layout?: 1 | 2
       *         redirect?: string
       *         component?: string
       *         parentId?: number
       *         menuType?: 1 | 2 | 3 | 4
       *         iconType?: 1 | 2
       *         status?: boolean
       *         title?: string
       *         i18nKey?: string
       *         keepAlive?: boolean
       *         constant?: boolean
       *         icon?: string
       *         localIcon?: string
       *         iconFontSize?: number
       *         order?: number
       *         href?: string
       *         hideInMenu?: boolean
       *         activeMenu?: string
       *         multiTab?: boolean
       *         fixedIndexInTab?: number
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<Dept>
       *   }>
       *   // 验证码
       *   msgCode?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_dept_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateDeptParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Dept.post_api_dept_submit',
        Config
      >;
    };
    DicData: {
      /**
       * ---
       *
       * [GET] 获取所有分组
       *
       * **path:** /api/DicData/GetAllGroupBy
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string[]
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dicdata_getallgroupby<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'DicData.get_api_dicdata_getallgroupby',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取下拉
       *
       * **path:** /api/DicData/GetSelect
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   groupBy?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     label?: string
       *     value?: string
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_dicdata_getselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DicDataSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            groupBy?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: DicDataSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'DicData.get_api_dicdata_getselect',
        Config
      >;
    };
    Login: {
      /**
       * ---
       *
       * [GET] 获取登录信息
       *
       * **path:** /api/Login/Info
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键Id!
       *     id?: number
       *     // 名称
       *     name?: string
       *     // 头像
       *     avatar?: string
       *     // 账号
       *     userName?: string
       *     roles?: string[]
       *     buttons?: string[]
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_login_info<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginInfoDTO;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginInfoDTO;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.get_api_login_info',
        Config
      >;
      /**
       * ---
       *
       * [POST] 登录
       *
       * **path:** /api/Login/Login
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 账号
       *   userName?: string
       *   // 密码
       *   password?: string
       *   captchaId?: string
       *   captchaCode?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 授权token
       *     accessToken?: string
       *     // 过期时间
       *     expires?: number
       *     // 类型
       *     tokenType?: string
       *     // 刷新token
       *     refreshToken?: string
       *     // 允许token时间内
       *     refreshTokenExpires?: number
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_login_login<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: LoginParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: LoginToken;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_api_login_login',
        Config
      >;
      /**
       * ---
       *
       * [POST] 退出登录
       *
       * **path:** /api/Login/LoginOut
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_login_loginout<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Login.post_api_login_loginout',
        Config
      >;
    };
    Menu: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Menu/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_menu_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.delete_api_menu_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 通过角色Id获取菜单数组
       *
       * **path:** /api/Menu/GetByRoleId
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   roleId?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number[]
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_getbyroleid<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            roleId?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_getbyroleid',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取常量路由
       *
       * **path:** /api/Menu/GetConstantRoutes
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: number
       *     // 菜单名
       *     name?: string
       *     // 路径
       *     path?: string
       *     pathParam?: string
       *     // 重定向
       *     redirect?: string
       *     // 组件
       *     component?: string
       *     // 父级
       *     parentId?: number
       *     type?: 1 | 2 | 3 | 4
       *     // 状态
       *     status?: boolean
       *     meta?: {
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title?: string
       *       // 多语言
       *       i18nKey?: string
       *       // 权限标识
       *       roles?: string[]
       *       // 缓存页面
       *       keepAlive?: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant?: boolean
       *       // 菜单和面包屑对应的图标
       *       icon?: string
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon?: string
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize?: number
       *       // 路由顺序，可用于菜单的排序
       *       order?: number
       *       // 外链链接
       *       href?: string
       *       // 是否在菜单中隐藏路线
       *       hideInMenu?: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu?: string
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab?: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab?: number
       *       // 跳转参数
       *       query?: Array<{
       *         id?: number
       *         // 父级Id
       *         parentId?: number
       *         key?: string
       *         value?: string
       *         // 状态
       *         status?: boolean
       *       }>
       *     }
       *     // 子节点
       *     children?: Array<RouteDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_getconstantroutes<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_getconstantroutes',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Menu/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 菜单 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     path?: string
       *     pathParam?: string
       *     layout?: 1 | 2
       *     redirect?: string
       *     component?: string
       *     parentId?: number
       *     menuType?: 1 | 2 | 3 | 4
       *     iconType?: 1 | 2
       *     status?: boolean
       *     title?: string
       *     i18nKey?: string
       *     keepAlive?: boolean
       *     constant?: boolean
       *     icon?: string
       *     localIcon?: string
       *     iconFontSize?: number
       *     order?: number
       *     href?: string
       *     hideInMenu?: boolean
       *     activeMenu?: string
       *     multiTab?: boolean
       *     fixedIndexInTab?: number
       *     isDeleted?: boolean
       *     roles?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       status?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: number
       *       dept?: Dept
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         path?: string
       *         pathParam?: string
       *         layout?: 1 | 2
       *         redirect?: string
       *         component?: string
       *         parentId?: number
       *         menuType?: 1 | 2 | 3 | 4
       *         iconType?: 1 | 2
       *         status?: boolean
       *         title?: string
       *         i18nKey?: string
       *         keepAlive?: boolean
       *         constant?: boolean
       *         icon?: string
       *         localIcon?: string
       *         iconFontSize?: number
       *         order?: number
       *         href?: string
       *         hideInMenu?: boolean
       *         activeMenu?: string
       *         multiTab?: boolean
       *         fixedIndexInTab?: number
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       path?: string
       *       pathParam?: string
       *       layout?: 1 | 2
       *       redirect?: string
       *       component?: string
       *       parentId?: number
       *       menuType?: 1 | 2 | 3 | 4
       *       iconType?: 1 | 2
       *       status?: boolean
       *       title?: string
       *       i18nKey?: string
       *       keepAlive?: boolean
       *       constant?: boolean
       *       icon?: string
       *       localIcon?: string
       *       iconFontSize?: number
       *       order?: number
       *       href?: string
       *       hideInMenu?: boolean
       *       activeMenu?: string
       *       multiTab?: boolean
       *       fixedIndexInTab?: number
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *     buttons?: Array<{
       *       id?: number
       *       // 按钮编码
       *       code?: string
       *       // 描述
       *       desc?: string
       *       // 父级Id
       *       parentId?: number
       *       // 状态
       *       status?: boolean
       *     }>
       *     querys?: Array<{
       *       id?: number
       *       // 父级Id
       *       parentId?: number
       *       key?: string
       *       value?: string
       *       // 状态
       *       status?: boolean
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 菜单 详情
           * [required]
           */
          data: MenuInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 菜单 详情
           * [required]
           */
          data: MenuInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取我的路由
       *
       * **path:** /api/Menu/GetRoutes
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: number
       *     // 菜单名
       *     name?: string
       *     // 路径
       *     path?: string
       *     pathParam?: string
       *     // 重定向
       *     redirect?: string
       *     // 组件
       *     component?: string
       *     // 父级
       *     parentId?: number
       *     type?: 1 | 2 | 3 | 4
       *     // 状态
       *     status?: boolean
       *     meta?: {
       *       // 路由标题(可用来作document.title或者菜单的名称)
       *       title?: string
       *       // 多语言
       *       i18nKey?: string
       *       // 权限标识
       *       roles?: string[]
       *       // 缓存页面
       *       keepAlive?: boolean
       *       // 当设置为true时，将不会进行登录验证，也不会进行访问路径的权限验证
       *       constant?: boolean
       *       // 菜单和面包屑对应的图标
       *       icon?: string
       *       // 使用本地svg作为的菜单和面包屑对应的图标(assets/svg-icon文件夹的的svg文件名)
       *       localIcon?: string
       *       // 菜单和面包屑对应的图标的字体大小
       *       iconFontSize?: number
       *       // 路由顺序，可用于菜单的排序
       *       order?: number
       *       // 外链链接
       *       href?: string
       *       // 是否在菜单中隐藏路线
       *       hideInMenu?: boolean
       *       // 当前路由需要选中的菜单项(用于跳转至不在左侧菜单显示的路由且需要高亮某个菜单的情况)
       *       activeMenu?: string
       *       // 是否支持多个tab页签(默认一个，即相同name的路由会被替换)
       *       multiTab?: boolean
       *       // 如果设置，路线将固定在制表符中，值是固定制表符的顺序
       *       fixedIndexInTab?: number
       *       // 跳转参数
       *       query?: Array<{
       *         id?: number
       *         // 父级Id
       *         parentId?: number
       *         key?: string
       *         value?: string
       *         // 状态
       *         status?: boolean
       *       }>
       *     }
       *     // 子节点
       *     children?: Array<RouteDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_getroutes<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_getroutes',
        Config
      >;
      /**
       * ---
       *
       * [GET] 列表
       *
       * **path:** /api/Menu/GetTree
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: number
       *     // 菜单标题
       *     title?: string
       *     // 路由名称
       *     name?: string
       *     // 组件
       *     component?: string
       *     // 父级菜单ID
       *     parentId?: number
       *     // 排序
       *     order?: number
       *     // icon图标
       *     icon?: string
       *     menuType?: 1 | 2 | 3 | 4
       *     // 是否缓存
       *     keepAlive?: boolean
       *     // 是否隐藏
       *     hidden?: boolean
       *     // 跳转路由
       *     redirect?: string
       *     // 根目录始终显示
       *     alwaysShow?: boolean
       *     // 状态
       *     status?: boolean
       *     children?: Array<MenuTreeDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_gettree<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuTreeDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_gettree',
        Config
      >;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Menu/GetTreeSelect
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   parentId?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     // 主键Id!
       *     id?: number
       *     // 父级
       *     parentId?: number
       *     // 菜单
       *     title?: string
       *     // 图标
       *     icon?: string
       *     children?: Array<MenuSelectDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_gettreeselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            parentId?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: MenuSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_gettreeselect',
        Config
      >;
      /**
       * ---
       *
       * [GET] 判断路由是否存在
       *
       * **path:** /api/Menu/IsRouteExist
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   name?: string
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: boolean
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_isrouteexist<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: boolean;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            name?: string;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: boolean;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_isrouteexist',
        Config
      >;
      /**
       * ---
       *
       * [GET] 菜单下拉
       *
       * **path:** /api/Menu/Select
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     id?: number
       *     // 父级ID
       *     parentId?: number
       *     // 标题
       *     title?: string
       *     menuType?: 1 | 2 | 3 | 4
       *     children?: Array<RouteSelectDTO>
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_menu_select<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RouteSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.get_api_menu_select',
        Config
      >;
      /**
       * ---
       *
       * [POST] 通过角色Id添加菜单数组
       *
       * **path:** /api/Menu/SetByRoleId
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   roleId?: number
       *   menuIds?: number[]
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_menu_setbyroleid<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: SetByRoleIdDTO;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.post_api_menu_setbyroleid',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/Menu/SetStatus
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       *   status?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_menu_setstatus<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
            status?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.put_api_menu_setstatus',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/Menu/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   name?: string
       *   path?: string
       *   pathParam?: string
       *   layout?: 1 | 2
       *   redirect?: string
       *   component?: string
       *   parentId?: number
       *   menuType?: 1 | 2 | 3 | 4
       *   iconType?: 1 | 2
       *   status?: boolean
       *   title?: string
       *   i18nKey?: string
       *   keepAlive?: boolean
       *   constant?: boolean
       *   icon?: string
       *   localIcon?: string
       *   iconFontSize?: number
       *   order?: number
       *   href?: string
       *   hideInMenu?: boolean
       *   activeMenu?: string
       *   multiTab?: boolean
       *   fixedIndexInTab?: number
       *   isDeleted?: boolean
       *   roles?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     status?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: number
       *     dept?: Dept
       *     user_Dept_Roles?: Array<User_Dept_Role>
       *     menus?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       path?: string
       *       pathParam?: string
       *       layout?: 1 | 2
       *       redirect?: string
       *       component?: string
       *       parentId?: number
       *       menuType?: 1 | 2 | 3 | 4
       *       iconType?: 1 | 2
       *       status?: boolean
       *       title?: string
       *       i18nKey?: string
       *       keepAlive?: boolean
       *       constant?: boolean
       *       icon?: string
       *       localIcon?: string
       *       iconFontSize?: number
       *       order?: number
       *       href?: string
       *       hideInMenu?: boolean
       *       activeMenu?: string
       *       multiTab?: boolean
       *       fixedIndexInTab?: number
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *   }>
       *   children?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     path?: string
       *     pathParam?: string
       *     layout?: 1 | 2
       *     redirect?: string
       *     component?: string
       *     parentId?: number
       *     menuType?: 1 | 2 | 3 | 4
       *     iconType?: 1 | 2
       *     status?: boolean
       *     title?: string
       *     i18nKey?: string
       *     keepAlive?: boolean
       *     constant?: boolean
       *     icon?: string
       *     localIcon?: string
       *     iconFontSize?: number
       *     order?: number
       *     href?: string
       *     hideInMenu?: boolean
       *     activeMenu?: string
       *     multiTab?: boolean
       *     fixedIndexInTab?: number
       *     isDeleted?: boolean
       *     roles?: Array<Role>
       *     children?: Array<Menu>
       *   }>
       *   buttons?: Array<{
       *     id?: number
       *     // 按钮编码
       *     code?: string
       *     // 描述
       *     desc?: string
       *     // 父级Id
       *     parentId?: number
       *     // 状态
       *     status?: boolean
       *   }>
       *   querys?: Array<{
       *     id?: number
       *     // 父级Id
       *     parentId?: number
       *     key?: string
       *     value?: string
       *     // 状态
       *     status?: boolean
       *   }>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_menu_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateMenuParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Menu.post_api_menu_submit',
        Config
      >;
    };
    Role: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/Role/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_role_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.delete_api_role_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/Role/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 角色 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     type?: 10 | 20 | 30 | 40
       *     status?: boolean
       *     remark?: string
       *     code?: string
       *     sort?: number
       *     deptId?: number
       *     dept?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: number
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       status?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       roles?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         status?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: number
       *         dept?: Dept
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         menus?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           path?: string
       *           pathParam?: string
       *           layout?: 1 | 2
       *           redirect?: string
       *           component?: string
       *           parentId?: number
       *           menuType?: 1 | 2 | 3 | 4
       *           iconType?: 1 | 2
       *           status?: boolean
       *           title?: string
       *           i18nKey?: string
       *           keepAlive?: boolean
       *           constant?: boolean
       *           icon?: string
       *           localIcon?: string
       *           iconFontSize?: number
       *           order?: number
       *           href?: string
       *           hideInMenu?: boolean
       *           activeMenu?: string
       *           multiTab?: boolean
       *           fixedIndexInTab?: number
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }
       *     user_Dept_Roles?: Array<{
       *       userId?: number
       *       deptId?: number
       *       roleId?: number
       *       dept?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: number
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         status?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         roles?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           status?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: number
       *           dept?: Dept
       *           user_Dept_Roles?: Array<User_Dept_Role>
       *           menus?: Array<{
       *             // 主键
       *             id?: number
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             name?: string
       *             path?: string
       *             pathParam?: string
       *             layout?: 1 | 2
       *             redirect?: string
       *             component?: string
       *             parentId?: number
       *             menuType?: 1 | 2 | 3 | 4
       *             iconType?: 1 | 2
       *             status?: boolean
       *             title?: string
       *             i18nKey?: string
       *             keepAlive?: boolean
       *             constant?: boolean
       *             icon?: string
       *             localIcon?: string
       *             iconFontSize?: number
       *             order?: number
       *             href?: string
       *             hideInMenu?: boolean
       *             activeMenu?: string
       *             multiTab?: boolean
       *             fixedIndexInTab?: number
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }
       *       role?: Role
       *       user?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         nickName?: string
       *         avatar?: string
       *         phone?: string
       *         email?: string
       *         password?: string
       *         status?: boolean
       *         userName?: string
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *       }
       *     }>
       *     menus?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       path?: string
       *       pathParam?: string
       *       layout?: 1 | 2
       *       redirect?: string
       *       component?: string
       *       parentId?: number
       *       menuType?: 1 | 2 | 3 | 4
       *       iconType?: 1 | 2
       *       status?: boolean
       *       title?: string
       *       i18nKey?: string
       *       keepAlive?: boolean
       *       constant?: boolean
       *       icon?: string
       *       localIcon?: string
       *       iconFontSize?: number
       *       order?: number
       *       href?: string
       *       hideInMenu?: boolean
       *       activeMenu?: string
       *       multiTab?: boolean
       *       fixedIndexInTab?: number
       *       isDeleted?: boolean
       *       roles?: Array<Role>
       *       children?: Array<Menu>
       *     }>
       *     menuIds?: number[]
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_role_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 角色 详情
           * [required]
           */
          data: RoleInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 角色 详情
           * [required]
           */
          data: RoleInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_api_role_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/Role/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       *   StartIndex?: number
       *   Search?: Record<string, Record<string, string>>
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       status?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: number
       *       dept?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: number
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         status?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         roles?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           status?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: number
       *           dept?: Dept
       *           user_Dept_Roles?: Array<User_Dept_Role>
       *           menus?: Array<{
       *             // 主键
       *             id?: number
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             name?: string
       *             path?: string
       *             pathParam?: string
       *             layout?: 1 | 2
       *             redirect?: string
       *             component?: string
       *             parentId?: number
       *             menuType?: 1 | 2 | 3 | 4
       *             iconType?: 1 | 2
       *             status?: boolean
       *             title?: string
       *             i18nKey?: string
       *             keepAlive?: boolean
       *             constant?: boolean
       *             icon?: string
       *             localIcon?: string
       *             iconFontSize?: number
       *             order?: number
       *             href?: string
       *             hideInMenu?: boolean
       *             activeMenu?: string
       *             multiTab?: boolean
       *             fixedIndexInTab?: number
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }
       *       user_Dept_Roles?: Array<{
       *         userId?: number
       *         deptId?: number
       *         roleId?: number
       *         dept?: {
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           image?: string
       *           name?: string
       *           easyName?: string
       *           parentId?: number
       *           address?: string
       *           isDeleted?: boolean
       *           phone?: string
       *           man?: string
       *           remark?: string
       *           status?: boolean
       *           sort?: number
       *           type?: DeptTypeEnum
       *           user_Dept_Roles?: Array<User_Dept_Role>
       *           roles?: Array<{
       *             // 主键
       *             id?: number
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             name?: string
       *             type?: 10 | 20 | 30 | 40
       *             status?: boolean
       *             remark?: string
       *             code?: string
       *             sort?: number
       *             deptId?: number
       *             dept?: Dept
       *             user_Dept_Roles?: Array<User_Dept_Role>
       *             menus?: Array<{
       *               // 主键
       *               id?: number
       *               // 创建者名称
       *               createBy?: string
       *               // 创建时间
       *               createTime?: string
       *               // 更新者名称
       *               updateBy?: string
       *               // 最后更新时间
       *               updateTime?: string
       *               name?: string
       *               path?: string
       *               pathParam?: string
       *               layout?: 1 | 2
       *               redirect?: string
       *               component?: string
       *               parentId?: number
       *               menuType?: 1 | 2 | 3 | 4
       *               iconType?: 1 | 2
       *               status?: boolean
       *               title?: string
       *               i18nKey?: string
       *               keepAlive?: boolean
       *               constant?: boolean
       *               icon?: string
       *               localIcon?: string
       *               iconFontSize?: number
       *               order?: number
       *               href?: string
       *               hideInMenu?: boolean
       *               activeMenu?: string
       *               multiTab?: boolean
       *               fixedIndexInTab?: number
       *               isDeleted?: boolean
       *               roles?: Array<Role>
       *               children?: Array<Menu>
       *             }>
       *           }>
       *           children?: Array<Dept>
       *         }
       *         role?: Role
       *         user?: {
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           nickName?: string
       *           avatar?: string
       *           phone?: string
       *           email?: string
       *           password?: string
       *           status?: boolean
       *           userName?: string
       *           user_Dept_Roles?: Array<User_Dept_Role>
       *         }
       *       }>
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         path?: string
       *         pathParam?: string
       *         layout?: 1 | 2
       *         redirect?: string
       *         component?: string
       *         parentId?: number
       *         menuType?: 1 | 2 | 3 | 4
       *         iconType?: 1 | 2
       *         status?: boolean
       *         title?: string
       *         i18nKey?: string
       *         keepAlive?: boolean
       *         constant?: boolean
       *         icon?: string
       *         localIcon?: string
       *         iconFontSize?: number
       *         order?: number
       *         href?: string
       *         hideInMenu?: boolean
       *         activeMenu?: string
       *         multiTab?: boolean
       *         fixedIndexInTab?: number
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *       deptName?: string
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_role_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            KeyWord?: string;
            StartIndex?: number;
            Search?: Record<string, Record<string, string>>;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_api_role_getpage',
        Config
      >;
      /**
       * ---
       *
       * [GET] 下拉框
       *
       * **path:** /api/Role/GetSelect
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: Array<{
       *     // 主键Id!
       *     id?: number
       *     // 账号
       *     name?: string
       *   }>
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_role_getselect<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: RoleSelectDTO[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.get_api_role_getselect',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/Role/SetStatus
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       *   status?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_role_setstatus<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
            status?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.put_api_role_setstatus',
        Config
      >;
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/Role/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   name?: string
       *   type?: 10 | 20 | 30 | 40
       *   status?: boolean
       *   remark?: string
       *   code?: string
       *   sort?: number
       *   deptId?: number
       *   dept?: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     image?: string
       *     name?: string
       *     easyName?: string
       *     parentId?: number
       *     address?: string
       *     isDeleted?: boolean
       *     phone?: string
       *     man?: string
       *     remark?: string
       *     status?: boolean
       *     sort?: number
       *     type?: DeptTypeEnum
       *     user_Dept_Roles?: Array<User_Dept_Role>
       *     roles?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       name?: string
       *       type?: 10 | 20 | 30 | 40
       *       status?: boolean
       *       remark?: string
       *       code?: string
       *       sort?: number
       *       deptId?: number
       *       dept?: Dept
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       menus?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         path?: string
       *         pathParam?: string
       *         layout?: 1 | 2
       *         redirect?: string
       *         component?: string
       *         parentId?: number
       *         menuType?: 1 | 2 | 3 | 4
       *         iconType?: 1 | 2
       *         status?: boolean
       *         title?: string
       *         i18nKey?: string
       *         keepAlive?: boolean
       *         constant?: boolean
       *         icon?: string
       *         localIcon?: string
       *         iconFontSize?: number
       *         order?: number
       *         href?: string
       *         hideInMenu?: boolean
       *         activeMenu?: string
       *         multiTab?: boolean
       *         fixedIndexInTab?: number
       *         isDeleted?: boolean
       *         roles?: Array<Role>
       *         children?: Array<Menu>
       *       }>
       *     }>
       *     children?: Array<Dept>
       *   }
       *   user_Dept_Roles?: Array<{
       *     userId?: number
       *     deptId?: number
       *     roleId?: number
       *     dept?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: number
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       status?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       roles?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         status?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: number
       *         dept?: Dept
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         menus?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           path?: string
       *           pathParam?: string
       *           layout?: 1 | 2
       *           redirect?: string
       *           component?: string
       *           parentId?: number
       *           menuType?: 1 | 2 | 3 | 4
       *           iconType?: 1 | 2
       *           status?: boolean
       *           title?: string
       *           i18nKey?: string
       *           keepAlive?: boolean
       *           constant?: boolean
       *           icon?: string
       *           localIcon?: string
       *           iconFontSize?: number
       *           order?: number
       *           href?: string
       *           hideInMenu?: boolean
       *           activeMenu?: string
       *           multiTab?: boolean
       *           fixedIndexInTab?: number
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }
       *     role?: Role
       *     user?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       nickName?: string
       *       avatar?: string
       *       phone?: string
       *       email?: string
       *       password?: string
       *       status?: boolean
       *       userName?: string
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *     }
       *   }>
       *   menus?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     name?: string
       *     path?: string
       *     pathParam?: string
       *     layout?: 1 | 2
       *     redirect?: string
       *     component?: string
       *     parentId?: number
       *     menuType?: 1 | 2 | 3 | 4
       *     iconType?: 1 | 2
       *     status?: boolean
       *     title?: string
       *     i18nKey?: string
       *     keepAlive?: boolean
       *     constant?: boolean
       *     icon?: string
       *     localIcon?: string
       *     iconFontSize?: number
       *     order?: number
       *     href?: string
       *     hideInMenu?: boolean
       *     activeMenu?: string
       *     multiTab?: boolean
       *     fixedIndexInTab?: number
       *     isDeleted?: boolean
       *     roles?: Array<Role>
       *     children?: Array<Menu>
       *   }>
       *   // 菜单
       *   menuIds?: number[]
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_role_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateRoleParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Role.post_api_role_submit',
        Config
      >;
    };
    TableColumn: {
      /**
       * ---
       *
       * [DELETE] 删除表头
       *
       * **path:** /api/TableColumn/Delete/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_tablecolumn_delete_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            tableof: string;
          };
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.delete_api_tablecolumn_delete_tableof',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/TableColumn/GetForm/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tablecolumn_getform_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            tableof: string;
          };
          params: {
            id?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.get_api_tablecolumn_getform_tableof',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/TableColumn/Page/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   StartIndex?: number
       *   Search?: Record<string, Record<string, string>>
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: unknown[]
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tablecolumn_page_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ObjectPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            tableof: string;
          };
          params: {
            StartIndex?: number;
            Search?: Record<string, Record<string, string>>;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: ObjectPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.get_api_tablecolumn_page_tableof',
        Config
      >;
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/TableColumn/Submit/{tableof}
       *
       * ---
       *
       * **Path Parameters**
       * ```ts
       * type PathParameters = {
       *   // [required]
       *   tableof: string
       * }
       * ```
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = Record<string, unknown>
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_tablecolumn_submit_tableof<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          pathParams: {
            /**
             * [required]
             */
            tableof: string;
          };
          data: Record<string, unknown>;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableColumn.post_api_tablecolumn_submit_tableof',
        Config
      >;
    };
    TableView: {
      /**
       * ---
       *
       * [DELETE] 删除表头
       *
       * **path:** /api/TableView/DeleteTableHeader
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_tableview_deletetableheader<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.delete_api_tableview_deletetableheader',
        Config
      >;
      /**
       * ---
       *
       * [GET] 获取表字段
       *
       * **path:** /api/TableView/GetTableHeader
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Tableof?: string
       *   Router?: string
       *   Type?: 1 | 2 | 3
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     tableof?: string
       *     router?: string
       *     type?: 1 | 2 | 3
       *     sortKey?: string
       *     sortOrder?: 1 | 2
       *     props?: string
       *     tableColumns?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       viewId?: number
       *       title?: string
       *       key?: string
       *       searchType?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *       columnType?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 99
       *       columnTypeDetail?: string
       *       columnTypeRules?: string
       *       isCustom?: boolean
       *       sort?: number
       *       isShow?: boolean
       *       props?: string
       *       tableView?: TableView
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tableview_gettableheader<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableView;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Tableof?: string;
            Router?: string;
            Type?: ViewTypeEnum;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableView;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.get_api_tableview_gettableheader',
        Config
      >;
      /**
       * ---
       *
       * [GET] 表头信息获取
       *
       * **path:** /api/TableView/GetView
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   Tableof?: string
       *   Router?: string
       *   Type?: 1 | 2 | 3
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     tableof?: string
       *     router?: string
       *     type?: 1 | 2 | 3
       *     sortKey?: string
       *     sortOrder?: 1 | 2
       *     props?: string
       *     tableColumns?: Array<{
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       viewId?: number
       *       title?: string
       *       key?: string
       *       searchType?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *       columnType?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 99
       *       columnTypeDetail?: string
       *       columnTypeRules?: string
       *       isCustom?: boolean
       *       sort?: number
       *       isShow?: boolean
       *       props?: string
       *       tableView?: TableView
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_tableview_getview<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableView;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            Tableof?: string;
            Router?: string;
            Type?: ViewTypeEnum;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableView;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.get_api_tableview_getview',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置表头
       *
       * **path:** /api/TableView/SetTableHeader
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   viewId?: number
       *   title?: string
       *   key?: string
       *   searchType?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *   columnType?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 99
       *   columnTypeDetail?: string
       *   columnTypeRules?: string
       *   isCustom?: boolean
       *   sort?: number
       *   isShow?: boolean
       *   props?: string
       *   tableView?: TableView
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     viewId?: number
       *     title?: string
       *     key?: string
       *     searchType?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *     columnType?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 99
       *     columnTypeDetail?: string
       *     columnTypeRules?: string
       *     isCustom?: boolean
       *     sort?: number
       *     isShow?: boolean
       *     props?: string
       *     tableView?: TableView
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_tableview_settableheader<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableColumn;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: TableColumn;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: TableColumn;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.put_api_tableview_settableheader',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 排序
       *
       * **path:** /api/TableView/SetTableSort
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = Array<{
       *   id?: number
       *   sort?: number
       * }>
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: unknown
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_tableview_settablesort<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: TableSortParam[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: unknown;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.put_api_tableview_settablesort',
        Config
      >;
      /**
       * ---
       *
       * [POST] 新增
       *
       * **path:** /api/TableView/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   tableof?: string
       *   router?: string
       *   type?: 1 | 2 | 3
       *   sortKey?: string
       *   sortOrder?: 1 | 2
       *   props?: string
       *   tableColumns?: Array<{
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     viewId?: number
       *     title?: string
       *     key?: string
       *     searchType?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15 | 16
       *     columnType?: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 99
       *     columnTypeDetail?: string
       *     columnTypeRules?: string
       *     isCustom?: boolean
       *     sort?: number
       *     isShow?: boolean
       *     props?: string
       *     tableView?: TableView
       *   }>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_tableview_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateTableViewParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'TableView.post_api_tableview_submit',
        Config
      >;
    };
    Upload: {
      /**
       * ---
       *
       * [POST] 上传图片
       *
       * **path:** /api/Upload/Images
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: string[]
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_upload_images<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }>
      >(
        config?: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: string[];
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'Upload.post_api_upload_images',
        Config
      >;
    };
    User: {
      /**
       * ---
       *
       * [DELETE] 删除
       *
       * **path:** /api/User/Delete
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = number[]
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      delete_api_user_delete<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: number[];
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.delete_api_user_delete',
        Config
      >;
      /**
       * ---
       *
       * [GET] 查询详情
       *
       * **path:** /api/User/GetInfo
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // 用户 详情
       *   // [required]
       *   data: {
       *     // 主键
       *     id?: number
       *     // 创建者名称
       *     createBy?: string
       *     // 创建时间
       *     createTime?: string
       *     // 更新者名称
       *     updateBy?: string
       *     // 最后更新时间
       *     updateTime?: string
       *     nickName?: string
       *     avatar?: string
       *     phone?: string
       *     email?: string
       *     password?: string
       *     status?: boolean
       *     userName?: string
       *     user_Dept_Roles?: Array<{
       *       userId?: number
       *       deptId?: number
       *       roleId?: number
       *       dept?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         image?: string
       *         name?: string
       *         easyName?: string
       *         parentId?: number
       *         address?: string
       *         isDeleted?: boolean
       *         phone?: string
       *         man?: string
       *         remark?: string
       *         status?: boolean
       *         sort?: number
       *         type?: DeptTypeEnum
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         roles?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           type?: 10 | 20 | 30 | 40
       *           status?: boolean
       *           remark?: string
       *           code?: string
       *           sort?: number
       *           deptId?: number
       *           dept?: Dept
       *           user_Dept_Roles?: Array<User_Dept_Role>
       *           menus?: Array<{
       *             // 主键
       *             id?: number
       *             // 创建者名称
       *             createBy?: string
       *             // 创建时间
       *             createTime?: string
       *             // 更新者名称
       *             updateBy?: string
       *             // 最后更新时间
       *             updateTime?: string
       *             name?: string
       *             path?: string
       *             pathParam?: string
       *             layout?: 1 | 2
       *             redirect?: string
       *             component?: string
       *             parentId?: number
       *             menuType?: 1 | 2 | 3 | 4
       *             iconType?: 1 | 2
       *             status?: boolean
       *             title?: string
       *             i18nKey?: string
       *             keepAlive?: boolean
       *             constant?: boolean
       *             icon?: string
       *             localIcon?: string
       *             iconFontSize?: number
       *             order?: number
       *             href?: string
       *             hideInMenu?: boolean
       *             activeMenu?: string
       *             multiTab?: boolean
       *             fixedIndexInTab?: number
       *             isDeleted?: boolean
       *             roles?: Array<Role>
       *             children?: Array<Menu>
       *           }>
       *         }>
       *         children?: Array<Dept>
       *       }
       *       role?: Role
       *       user?: {
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         nickName?: string
       *         avatar?: string
       *         phone?: string
       *         email?: string
       *         password?: string
       *         status?: boolean
       *         userName?: string
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *       }
       *     }>
       *     roleIds?: number[]
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_user_getinfo<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * 用户 详情
           * [required]
           */
          data: UserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * 用户 详情
           * [required]
           */
          data: UserInfo;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.get_api_user_getinfo',
        Config
      >;
      /**
       * ---
       *
       * [GET] 分页
       *
       * **path:** /api/User/GetPage
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   KeyWord?: string
       *   // 公司
       *   DeptId?: number
       *   StartIndex?: number
       *   Search?: Record<string, Record<string, string>>
       *   PageIndex?: number
       *   PageSize?: number
       *   SortList?: Record<string, string>
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: {
       *     pagerInfo?: {
       *       totalRowCount?: number
       *       pageSize?: number
       *       startIndex?: number
       *       pageIndex?: number
       *       hasPrev?: boolean
       *       hasNext?: boolean
       *       isFirst?: boolean
       *       isLast?: boolean
       *       totalPageCount?: number
       *     }
       *     data?: Array<{
       *       id?: number
       *       // 昵称
       *       nickName?: string
       *       // 头像
       *       avatar?: string
       *       // 手机号
       *       phone?: string
       *       // 电子邮箱
       *       email?: string
       *       // 状态
       *       status?: boolean
       *       // 账号
       *       userName?: string
       *     }>
       *   }
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      get_api_user_getpage<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: UserDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            KeyWord?: string;
            /**
             * 公司
             */
            DeptId?: number;
            StartIndex?: number;
            Search?: Record<string, Record<string, string>>;
            PageIndex?: number;
            PageSize?: number;
            SortList?: Record<string, string>;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: UserDTOPagedResults;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.get_api_user_getpage',
        Config
      >;
      /**
       * ---
       *
       * [PUT] 设置状态
       *
       * **path:** /api/User/SetStatus
       *
       * ---
       *
       * **Query Parameters**
       * ```ts
       * type QueryParameters = {
       *   id?: number
       *   status?: boolean
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      put_api_user_setstatus<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          params: {
            id?: number;
            status?: boolean;
          };
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.put_api_user_setstatus',
        Config
      >;
      /**
       * ---
       *
       * [POST] 提交
       *
       * **path:** /api/User/Submit
       *
       * ---
       *
       * **RequestBody**
       * ```ts
       * type RequestBody = {
       *   // 主键
       *   id?: number
       *   // 创建者名称
       *   createBy?: string
       *   // 创建时间
       *   createTime?: string
       *   // 更新者名称
       *   updateBy?: string
       *   // 最后更新时间
       *   updateTime?: string
       *   nickName?: string
       *   avatar?: string
       *   phone?: string
       *   email?: string
       *   password?: string
       *   status?: boolean
       *   userName?: string
       *   user_Dept_Roles?: Array<{
       *     userId?: number
       *     deptId?: number
       *     roleId?: number
       *     dept?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       image?: string
       *       name?: string
       *       easyName?: string
       *       parentId?: number
       *       address?: string
       *       isDeleted?: boolean
       *       phone?: string
       *       man?: string
       *       remark?: string
       *       status?: boolean
       *       sort?: number
       *       type?: DeptTypeEnum
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *       roles?: Array<{
       *         // 主键
       *         id?: number
       *         // 创建者名称
       *         createBy?: string
       *         // 创建时间
       *         createTime?: string
       *         // 更新者名称
       *         updateBy?: string
       *         // 最后更新时间
       *         updateTime?: string
       *         name?: string
       *         type?: 10 | 20 | 30 | 40
       *         status?: boolean
       *         remark?: string
       *         code?: string
       *         sort?: number
       *         deptId?: number
       *         dept?: Dept
       *         user_Dept_Roles?: Array<User_Dept_Role>
       *         menus?: Array<{
       *           // 主键
       *           id?: number
       *           // 创建者名称
       *           createBy?: string
       *           // 创建时间
       *           createTime?: string
       *           // 更新者名称
       *           updateBy?: string
       *           // 最后更新时间
       *           updateTime?: string
       *           name?: string
       *           path?: string
       *           pathParam?: string
       *           layout?: 1 | 2
       *           redirect?: string
       *           component?: string
       *           parentId?: number
       *           menuType?: 1 | 2 | 3 | 4
       *           iconType?: 1 | 2
       *           status?: boolean
       *           title?: string
       *           i18nKey?: string
       *           keepAlive?: boolean
       *           constant?: boolean
       *           icon?: string
       *           localIcon?: string
       *           iconFontSize?: number
       *           order?: number
       *           href?: string
       *           hideInMenu?: boolean
       *           activeMenu?: string
       *           multiTab?: boolean
       *           fixedIndexInTab?: number
       *           isDeleted?: boolean
       *           roles?: Array<Role>
       *           children?: Array<Menu>
       *         }>
       *       }>
       *       children?: Array<Dept>
       *     }
       *     role?: Role
       *     user?: {
       *       // 主键
       *       id?: number
       *       // 创建者名称
       *       createBy?: string
       *       // 创建时间
       *       createTime?: string
       *       // 更新者名称
       *       updateBy?: string
       *       // 最后更新时间
       *       updateTime?: string
       *       nickName?: string
       *       avatar?: string
       *       phone?: string
       *       email?: string
       *       password?: string
       *       status?: boolean
       *       userName?: string
       *       user_Dept_Roles?: Array<User_Dept_Role>
       *     }
       *   }>
       *   roleIds?: number[]
       * }
       * ```
       *
       * ---
       *
       * **Response**
       * ```ts
       * type Response = {
       *   // [required]
       *   code: string
       *   // [required]
       *   data: number
       *   // [required]
       *   msg: string
       *   // [required]
       *   success: boolean
       * }
       * ```
       */
      post_api_user_submit<
        Config extends Alova2MethodConfig<{
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        }> & {
          data: UpdateUserParam;
        }
      >(
        config: Config
      ): Alova2Method<
        {
          /**
           * [required]
           */
          code: string;
          /**
           * [required]
           */
          data: number;
          /**
           * [required]
           */
          msg: string;
          /**
           * [required]
           */
          success: boolean;
        },
        'User.post_api_user_submit',
        Config
      >;
    };
  }

  var Apis: Apis;
}
